{"version":3,"sources":["ng://blog/lib/blog.service.ts","ng://blog/lib/api.service.ts","ng://blog/lib/blog.component.ts","ng://blog/lib/material-module.ts","ng://blog/lib/add-blog/add-blog.component.ts","ng://blog/lib/app-routing.module.ts","ng://blog/lib/addedit-blogmanagement/addedit-blogmanagement.component.ts","ng://blog/lib/youtubeplayer/youtubeplayer.component.ts","ng://blog/lib/listing-blogmanagementlib/listing-blogmanagementlib.component.ts","ng://blog/lib/blog.module.ts"],"names":["BlogService","Injectable","args","providedIn","ApiService","prototype","setServerUrl","value","this","subjectForServerUrl","next","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","isTokenExpired","addData","requestdata","console","log","httpOptions","headers","HttpHeaders","Content-Type","Authorization","accesstoken","serverUrl","_http","post","addendpointUrl","JSON","stringify","pipe","map","res","uploadFile","access-token","uploadEndpointUrl","UpdateData","updateendpointUrl","getData","getdata_endpointUrl","deleteSingleData","deletesingle_endpointUrl","deleteMultipleData","UpdateStatusForSingleData","updatestatus_single_endpointUrl","UpdateStatusForMultipleData","CustomRequest","endpoint","HttpClient","CookieService","_authHttp","cookieService","_this","progress","uploaderror","get","fileservername","Subject","subscriptionServer","subscribe","message","result","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","BlogComponent","Object","defineProperty","apivalue","apiUrlviaApp","token","tokenViapp","addvalue","addMemberviaUrl","Blogtablename","editRouteUrl","addeditvalue","addupdateRouteUrl","delValue","deleteRouteUrl","endpointUrlval","getDataEndpointData","serverUrlval","getDataSourceData","serverUrlData","addEndpointData","listresolveUrlval","blogDataarray","ngOnInit","apiService","setTimeout","data","source","response","addButton","router","navigateByUrl","Component","selector","template","Router","ActivatedRoute","Input","activeroute","ResolveLIstData","Bloglist_skip","Bloglist_modify_header","title","description","parentcategoryname","status","priority","val","name","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddBlogComponent","listval","listUrl","allData","snapshot","params","id","params_id","headerText","buttonText","blogAddEditForm","controls","patchValue","model","editorData","parent_id","apiservice","getBlogData","openDialog","x","dialogRef","dialog","open","Dialogtest","width","afterClosed","inputUntouch","form","markAsUntouched","blogarray","blogAddEditFormSubmit","isSubmitted","markAsTouched","valid","parseInt","messageText","sourceobj","statusarray","close","FormBuilder","MatDialog","fb","Editor","ClassicEditor","editorConfig","placeholder","editarray","group","Validators","required","MatDialogRef","Inject","MAT_DIALOG_DATA","is_error","appRoutes","path","component","AppRoutingModule","imports","RouterModule","forRoot","AddeditBlogmanagementComponent","getConfig","configData","activatedRoute","addYoutubeVideo","getBlogCategory","getTagsCount","vid","blogManagementForm","setData","blogtitle","blogcat","blogcontent","metatitle","metadesc","credentials","video_url","tags","forEach","element","tags_array","push","filteredOptions","myControl","valueChanges","startWith","_filter","filterValue","toLowerCase","options","filter","option","indexOf","Modal","height","msg","trackByFn","index","formBuilder","deleteCreds","removeAt","blogCategoryArray","editDatavals","onSubmit","inputBlur","showval","event","keyCode","target","preview_video","video_index","clearTags","splice","openSnackBar","snackBar","openFromComponent","YoutubeComponent","panelClass","MatSnackBar","http","video_prefix","FormControl","testTag","array","onNoClick","videoid","YoutubeplayerComponent","sanitizer","bypassSecurityTrustResourceUrl","DomSanitizer","ListingBlogmanagementlibComponent","receivedCategoryData","blogListingConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","tableName2","listArray_skip","listArray_modify_header","blogcategory","publication","videos","admintablenameTableName","statusarr","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","search_settings","textsearch","label","field","loader","date_search_endpoint","date_search_source","BlogModule","declarations","ListingModule","HttpClientModule","FormsModule","ReactiveFormsModule","BrowserModule","CKEditorModule","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor() { }\n}\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'access-token':this.accesstoken          //hard code written access-token(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { RouterModule, Routes, Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'lib-Blog',\n  templateUrl: 'blog.component.html',\n  styleUrls: ['style.css']\n})\nexport class BlogComponent implements OnInit {\n  /**blog variables declaration**/\n  public addMemberviaUrl: any;\n  public ResolveLIstData: any = [];\n  public editRouteUrl: any = '';\n  public Blogtablename: any = '';\n  public deleteRouteUrl: any = '';\n  public addupdateRouteUrl: any = '';\n  public serverUrlData: any;\n  public getDataEndpointData: any;\n  public getDataSourceData: any;\n  public addEndpointData: any;\n  public apiUrlviaApp: any = '';\n  public tokenViapp:any=''\n  /**lib-listing start here**/\n  public blogDataarray: any = [];\n  public Bloglist_skip: any = [\"_id\",\"description\"];\n  public Bloglist_modify_header: any = { 'title': \"Title\", 'description': \"Description\",\n      'parentcategoryname': \"Parent Category\",\"status\":\"Status\",\"priority\":\"Priority\" };\n  public status: any = [{ val: 1, 'name': 'Active' }, { val: 0, 'name': 'Inactive' }];\n  /**lib-listing end here**/\n\n  @Input()  //for apiUrl via application\n  set BlogapiUrl(apivalue: any) {\n    this.apiUrlviaApp = (apivalue) || '<no name set>';\n    this.apiUrlviaApp = apivalue;\n  }\n  @Input()  //for token via application\n  set BlogToken(token: any) {\n    this.tokenViapp = (token) || '<no name set>';\n    this.tokenViapp = token;\n  }\n\n  @Input()  //for add button\n  set addTeammember(addvalue: any) {\n    this.addMemberviaUrl = (addvalue) || '<no name set>';\n    this.addMemberviaUrl = addvalue;\n  }\n  @Input()   //Tablename from application\n  set Blogtable(value: any) {\n    this.Blogtablename = (value) || '<no name set>';\n    this.Blogtablename = value;\n  }\n\n  @Input() //for edit route\n  set editblog(value: any) {\n    this.editRouteUrl = (value) || '<no name set>';\n    this.editRouteUrl = value;\n  }\n  @Input()  //for add or update endpoint\n  set AddEditBlog(addeditvalue: any) {\n    this.addupdateRouteUrl = (addeditvalue) || '<no name set>';\n    this.addupdateRouteUrl = addeditvalue\n  }\n  @Input()     //for deleteEndpoint\n  set deleteBlog(delValue: any) {\n    this.deleteRouteUrl = (delValue) || '<no name set>';\n    this.deleteRouteUrl = delValue\n  }\n\n  @Input()          //setting the server url from project\n  set getDataEndpoint(endpointUrlval: any) {\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\n    this.getDataEndpointData = endpointUrlval;\n\n  }\n  @Input()          //setting the server url from project\n  set getDataSource(serverUrlval: any) {\n    this.getDataSourceData = (serverUrlval) || '<no name set>';\n    this.getDataSourceData = serverUrlval;\n\n  }\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrlval: any) {\n    this.serverUrlData = (serverUrlval) || '<no name set>';\n    this.serverUrlData = serverUrlval;\n\n\n  }\n  @Input()          //setting the server url from project\n  set addEndpoint(endpointUrlval: any) {\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\n    this.addEndpointData = endpointUrlval;\n\n  }\n  @Input()          //resolve list\n  set listResolve(listresolveUrlval: any) {\n    this.blogDataarray = (listresolveUrlval) || '<no name set>';\n    this.blogDataarray = listresolveUrlval;\n    \n    \n  }\n\n  constructor(public router: Router,\n    public apiService: ApiService, public activeroute: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    /**observable start here**/\n    this.apiService.clearServerUrl();\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlData);\n    }, 50);\n    this.apiService.clearaddEndpoint();\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointData);\n    }, 50);\n    this.apiService.cleargetdataEndpoint();\n    setTimeout(() => {\n      this.apiService.setgetdataEndpoint(this.getDataEndpointData);\n    }, 50);\n    /**observable end here**/\n    \n  }\n  /***getting all the blog data function start here**/\n\n  getData() {\n\n    let data: any;\n    data = {\n      \"source\": \"blog_category_view\"\n    }\n    this.apiService.getData(data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.blogDataarray = result.res;\n      \n\n    })\n\n  }\n   /**function end here**/\n \n  addButton(){\n    this.router.navigateByUrl('/'+this.addMemberviaUrl);\n  }\n \n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from \"@angular/material\";\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nexport interface DialogData {\n  message: string;\n}\n@Component({\n  selector: 'lib-add-blog',\n  templateUrl: './add-blog.component.html',\n  styleUrls: ['./add-blog.component.css']\n})\nexport class AddBlogComponent implements OnInit {\n\n  /**ckeditor start here*/\n  public Editor = ClassicEditor;  //for ckeditor\n  editorConfig = {\n    placeholder: 'Type the content here!',\n  };\n  public model = {\n    editorData: ''\n  };\n  /**ckeditor end here*/\n\n  /**blog varibles declaration start here**/\n  public dialogRef: any;\n  public getDataEndpointData: any;\n  public addEndpointData: any;\n  public serverUrlData: any;\n  public listUrl: any;\n  public blogarray: any = [];\n  isSubmitted = false;\n  blogAddEditForm: FormGroup;\n  public params_id: any;\n  public editarray: any = [];\n  public statusarray: any = [];\n  public allData: any = [];\n  /**blog varibles declaration end here**/\n  public headerText: any = 'Add Blogs';\n  public buttonText: any = 'Submit';\n  public messageText: any = 'Successfully Submitted';\n\n  @Input()         //setting the listing url form the application\n  set listRoute(listval: any) {\n    this.listUrl = (listval) || '<no name set>';\n    this.listUrl = listval;\n\n  }\n\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrlval: any) {\n    this.serverUrlData = (serverUrlval) || '<no name set>';\n    this.serverUrlData = serverUrlval;\n  }\n\n  @Input()          //setting the server url from project\n  set getDataEndpoint(endpointUrlval: any) {\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\n    this.getDataEndpointData = endpointUrlval;\n\n  }\n  @Input()          //setting the server url from project\n  set addEndpoint(endpointUrlval: any) {\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\n    this.addEndpointData = endpointUrlval;\n\n  }\n  @Input()          //single data from resolve call  & set the value for edit\n  set singleData(allData: any) {\n    this.allData = allData;\n    if (this.activeroute.snapshot.params.id) {\n      this.params_id = this.activeroute.snapshot.params.id;\n      this.headerText = \"Edit Blogs\";\n      this.buttonText = \"Update\";\n      this.blogAddEditForm.controls['title'].patchValue(allData[0].title);\n      this.blogAddEditForm.controls['priority'].patchValue(allData[0].priority);\n      this.blogAddEditForm.controls['status'].patchValue(allData[0].status);\n      this.blogAddEditForm.controls['description'].patchValue(allData[0].description);\n      this.model.editorData = allData[0].description;\n     \n      this.blogAddEditForm.controls['parent_id'].patchValue(allData[0].parent_id);\n    }\n  }\n\n\n  constructor(public fb: FormBuilder, public activeroute: ActivatedRoute,\n    public apiservice: ApiService, public _http: HttpClient, public router: Router\n    , public dialog: MatDialog) {\n\n    /**catch the parameter id***/\n\n    /*catch parameter id end here**/\n\n    /**Formgroup create start here**/\n    this.blogAddEditForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      priority: ['', Validators.required],\n      status: [true,],\n      parent_id: [0, Validators.required]\n\n    })\n    /**Formgroup create end here**/\n  }\n\n  ngOnInit() {\n    /**Observable start here**/\n    this.apiservice.clearServerUrl();\n    setTimeout(() => {\n      this.apiservice.setServerUrl(this.serverUrlData);\n    }, 50);\n    this.apiservice.cleargetdataEndpoint();\n    setTimeout(() => {\n      this.apiservice.setgetdataEndpoint(this.getDataEndpointData);\n    }, 50);\n    this.apiservice.clearaddEndpoint();\n    setTimeout(() => {\n      this.apiservice.setaddEndpoint(this.addEndpointData);\n    }, 50);\n    /**Observable end here**/\n\n    setTimeout(() => {\n      this.getBlogData();\n    }, 100);\n  }\n\n  /*modal start here*/\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Dialogtest, {\n      width: '250px',\n\n      data: { message: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  /**modal end here */\n\n  /**validation untouch purpose **/\n  inputUntouch(form: any, val: any) {\n\n    form.controls[val].markAsUntouched();\n  }\n  /*validation untouch purpose*/\n\n  /** getting all blogs data start here **/\n  getBlogData() {\n\n    let data: any = {\n      \"source\": \"blog_category_view\"\n    }\n\n    this.apiservice.getData(data).subscribe(response => {\n\n      let result: any = response;\n      this.blogarray = result.res;\n    })\n  }\n  // /**getting all blogs data end here**/\n\n  /**add & update* blogs submitting form start here**/\n  blogAddEditFormSubmit() {\n    this.blogAddEditForm.patchValue({\n      description: this.model.editorData\n    });\n    this.isSubmitted = true;\n    let x: any;\n    for (x in this.blogAddEditForm.controls) {\n      this.blogAddEditForm.controls[x].markAsTouched();\n    }\n    if (this.blogAddEditForm.valid) {\n      if (this.blogAddEditForm.value.status)\n        this.blogAddEditForm.value.status = parseInt(\"1\");\n      else\n        this.blogAddEditForm.value.status = parseInt(\"0\");\n      var data: any;\n      if (this.activeroute.snapshot.params.id != null) {    //update part\n        this.messageText = \"One row updated!!!\";\n        data = {\n          \"source\": \"blog_category\",\n          \"data\": {\n            \"id\": this.params_id,\n            \"parent_id\": this.blogAddEditForm.value.parent_id,\n            'title': this.blogAddEditForm.value.title,\n            'priority': this.blogAddEditForm.value.priority,\n            'status': this.blogAddEditForm.value.status,\n            'description': this.blogAddEditForm.value.description\n            \n\n          },\n          \"sourceobj\": [\"parent_id\"]\n        };\n      } else {\n        data = {                                         //add part\n          \"source\": \"blog_category\",\n          \"data\": {\n            \"parent_id\": this.blogAddEditForm.value.parent_id,\n            'title': this.blogAddEditForm.value.title,\n            'priority': this.blogAddEditForm.value.priority,\n            'status': this.blogAddEditForm.value.status,\n            'description': this.blogAddEditForm.value.description\n          },\n          \"sourceobj\": [\"parent_id\"]\n        };\n      }\n      this.apiservice.addData(data).subscribe(response => {\n        let result: any;\n        result = response;\n        this.statusarray = result.status;\n\n\n\n        if (result.status == \"success\")\n          this.openDialog(this.messageText);\n        setTimeout(() => {\n          this.dialogRef.close();\n        }, 2000);\n\n        setTimeout(() => {\n          this.router.navigateByUrl('/' + this.listUrl);\n        }, 3000);\n\n\n\n      });\n\n\n    }\n\n  }\n  /**add & update* blogs submitting form end here**/\n}\n\n\n@Component({\n  selector: 'dialogtest',\n  templateUrl: 'modal.html',\n})\nexport class Dialogtest {\n  public is_error: any;\n\n  constructor(public dialogRef: MatDialogRef<Dialogtest>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.is_error = data.message;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MetaGuard } from '@ngx-meta/core';\nimport { AddBlogComponent } from './add-blog/add-blog.component'\nconst appRoutes: Routes = [\n  {path:'add', component : AddBlogComponent },\n  {path:'edit/:id', component : AddBlogComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\nimport { map, startWith } from 'rxjs/operators';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\n\nexport interface DialogData {\n  msg: any;\n  videourl: any;\n}\n\n\n\n@Component({\n  selector: 'lib-addedit-blogmanagement',\n  templateUrl: './addedit-blogmanagement.component.html',\n  styleUrls: ['./addedit-blogmanagement.component.css']\n})\n\nexport class AddeditBlogmanagementComponent implements OnInit {\n\n  /**ckeditor start here*/\n  public Editor = ClassicEditor;  //for ckeditor\n  editorConfig = {\n    placeholder: 'Description...',\n  };\n  public model = {\n    editorData: ''\n  };\n  /**ckeditor end here*/\n\n\n\n\n\n  // ---------------------declarations-------------------------------------\n  public headerText: any = 'Add Blog Management Data';\n  public buttonText: any = 'SUBMIT';\n  public blogCategoryArray: any = [];\n  public configData: any;\n  blogManagementForm: FormGroup;\n  public serverUrlData: any;\n  public getDataEndpointData: any;\n  public addEndpointData: any;\n  isSubmitted = false;\n  video_prefix: any = 'https://www.youtube.com/watch?v=';\n  options: any = [];\n  filteredOptions: Observable<string[]>;\n  myControl = new FormControl();\n  tags_array: any = [];\n  dialogRef: any;\n  public params_id: any;\n  setData: any;\n  messageText: any;\n  listUrl: any;\n  testTag: any = [];\n\n  // -----------------------------------------------------------------------\n\n\n\n\n\n  // ----------------------------------------------Input Section-----------------------\n\n  // Input receiving from add/edit app \n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n\n  }\n\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrl: any) {\n    this.serverUrlData = (serverUrl) || '<no name set>';\n    this.serverUrlData = serverUrl;\n  }\n\n  @Input()          //setting the server url from project\n  set getDataEndpoint(endpointUrlval: any) {\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\n    this.getDataEndpointData = endpointUrlval;\n\n\n  }\n  @Input()          //setting the server url from project\n  set addEndpoint(endpointUrlval: any) {\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\n    this.addEndpointData = endpointUrlval;\n\n  }\n\n\n  @Input()         //setting the listing url form the application\n  set listRoute(listval: any) {\n    this.listUrl = (listval) || '<no name set>';\n    this.listUrl = listval;\n\n  }\n  // -----------------------------------------------------------------------------------------\n\n  constructor(private http: HttpClient, private apiservice: ApiService,\n    private activatedRoute: ActivatedRoute, private router: Router,\n    private formBuilder: FormBuilder, public dialog: MatDialog,\n    public snackBar: MatSnackBar) {\n    this.blogManagementForm = this.formBuilder.group({\n      blogtitle: ['', Validators.required],\n      blogcat: ['', Validators.required],\n      blogcontent: ['', Validators.required],\n      priority: ['', Validators.required],\n      status: ['true', Validators.required],\n      metatitle: ['', Validators.required],\n      metadesc: ['', Validators.required],\n      credentials: this.formBuilder.array([]),\n      tags: ['',],\n    });\n  }\n\n\n  ngOnInit() {\n    /**Observable start here**/\n    this.apiservice.clearServerUrl();\n    setTimeout(() => {\n      this.apiservice.setServerUrl(this.serverUrlData);\n    }, 50);\n    this.apiservice.cleargetdataEndpoint();\n    setTimeout(() => {\n      this.apiservice.setgetdataEndpoint(this.getDataEndpointData);\n    }, 50);\n    this.apiservice.clearaddEndpoint();\n    setTimeout(() => {\n      this.apiservice.setaddEndpoint(this.addEndpointData);\n    }, 50);\n    /**Observable end here**/\n\n    if (!this.activatedRoute.snapshot.params.id)\n      setTimeout(() => {\n        this.addYoutubeVideo('');\n      }, 500)\n\n    setTimeout(() => {\n      this.getBlogCategory();\n    }, 50)\n\n\n    setTimeout(() => {\n      this.getTagsCount();\n    }, 50)\n\n\n    if (this.activatedRoute.snapshot.params.id) {\n      this.params_id = this.activatedRoute.snapshot.params.id;\n      this.buttonText = \"Update\";\n      this.blogManagementForm.controls['blogtitle'].patchValue(this.setData.blogtitle);\n      this.blogManagementForm.controls['blogcat'].patchValue(this.setData.blogcat);\n      this.blogManagementForm.controls['blogcontent'].patchValue(this.setData.blogcontent);\n      this.blogManagementForm.controls['priority'].patchValue(this.setData.priority);\n      this.blogManagementForm.controls['status'].patchValue(this.setData.status);\n      this.blogManagementForm.controls['metatitle'].patchValue(this.setData.metatitle);\n      this.blogManagementForm.controls['metadesc'].patchValue(this.setData.metadesc);\n\n\n      for (const vid in this.setData.credentials) {\n        this.addYoutubeVideo(this.setData.credentials[vid].video_url);\n      }\n\n      if (this.setData.tags != \"\")\n        this.setData.tags.forEach(element => {\n          this.tags_array.push(element);\n        });\n\n\n    }\n\n\n\n\n\n    // ------------------------------Auticomplete Functions----------------------------------\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n    // ------------------------------------------------------------------------------------------\n  }\n\n\n  // ------------------------------------_Filter FUnction----------------------------------\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n  // --------------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n  // ------------------------------------MODAL Function--------------------------------------------\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '45%',\n      height: '500px',\n      data: { msg: x }\n\n    });\n\n    // this.sanitizer.bypassSecurityTrustResourceUrl\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // ----------------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\n\n  // ----------------------------Ediatble material Form Array-------------------\n  trackByFn(index) {\n    return index;\n  }\n  // -----------------------------------------------------------------------------\n\n\n\n\n\n\n\n  // ----------------------------------Add Credential Fucntions-----------------\n  addYoutubeVideo(val: any) {\n    const creds = this.blogManagementForm.controls.credentials as FormArray;\n    creds.push(this.formBuilder.group({\n      video_url: [val]\n    }));\n  }\n  // ---------------------------------------------------------------------------\n\n\n\n\n\n\n\n  // ---------------------------------Delete Credetial Fucntions----------------\n  deleteCreds() {\n    const creds = this.blogManagementForm.controls.credentials as FormArray;\n    creds.removeAt(1);\n  }\n  // ----------------------------------------------------------------------------\n\n\n\n\n\n\n  // ----------------------------------Get Blog Category Function-------------------\n\n  getBlogCategory() {\n    var data: any;\n    data = {\n      'source': 'blog_category'\n    };\n    this.apiservice.getData(data).subscribe(response => {\n      let result: any;\n      result = response;\n      result = response;\n      this.blogCategoryArray = result.res;\n    });\n  }\n  // ----------------------------------------------------------------------------------\n\n\n\n\n\n  // ----------------------------------TAGS view Function-------------------\n\n  getTagsCount() {\n    var data: any;\n    data = {\n      'source': 'tags_view'\n    };\n    this.apiservice.getData(data).subscribe(response => {\n      let result: any;\n      result = response;\n      if (result != null && result.res != null && result.res[0] != null)\n        this.options = result.res[0].tags;\n\n\n    });\n  }\n  // ----------------------------------------------------------------------------------\n\n\n\n\n\n  //  -----------------------------EDIT RESOLVE FUNCTION------------------------------\n  @Input()          //single data from resolve call  & set the value for edit\n  set singleData(editDatavals: any) {\n    this.setData = editDatavals;\n    console.log(\"Library te\", this.setData);\n\n\n  }\n  // -----------------------------------------------------------------------------------\n\n\n  // ---------------------------------SUBMIT----------------------------------------\n  onSubmit() {\n    this.blogManagementForm.value.tags = this.tags_array;\n    console.log(\"test\", this.blogManagementForm.value.tags);\n    this.blogManagementForm.controls['blogcontent'].markAsTouched();\n\n    if (this.blogManagementForm.valid) {\n      if (this.blogManagementForm.value.status)\n        this.blogManagementForm.value.status = parseInt(\"1\");\n      else\n        this.blogManagementForm.value.status = parseInt(\"0\");\n      if (this.activatedRoute.snapshot.params.id != null) {    //update part\n        this.messageText = \"One row updated!!!\";\n        this.blogManagementForm.value.tags = this.tags_array;\n        data = {\n          \"source\": \"blogs\",\n          \"data\": {\n            \"id\": this.params_id,\n            \"blogtitle\": this.blogManagementForm.value.blogtitle,\n            \"blogcat\": this.blogManagementForm.value.blogcat,\n            \"blogcontent\": this.blogManagementForm.value.blogcontent,\n            \"priority\": this.blogManagementForm.value.priority,\n            \"status\": this.blogManagementForm.value.status,\n            \"metatitle\": this.blogManagementForm.value.metatitle,\n            \"metadesc\": this.blogManagementForm.value.metadesc,\n            \"tags\": this.blogManagementForm.value.tags,\n            \"credentials\": this.blogManagementForm.value.credentials\n\n          },\n          \"sourceobj\": [\"blogcat\"]\n        };\n      } else {\n        this.isSubmitted = true;\n        var data: any;\n        data = {                                         //add part\n          \"source\": \"blogs\",\n          \"data\": this.blogManagementForm.value,\n          \"sourceobj\": [\"blogcat\"]\n        };\n      }\n\n      this.apiservice.addData(data).subscribe(response => {\n        let result: any;\n        result = response;\n\n\n\n        setTimeout(() => {\n          this.router.navigateByUrl('/' + this.listUrl);\n        }, 3000);\n\n      });\n\n\n\n    }\n  }\n\n\n  // -----------------------------------------------------------------------------------\n\n\n\n\n  get onSignUpValidate() {\n    return this.blogManagementForm.controls;\n  }\n\n\n  inputBlur(val: any) {\n    this.blogManagementForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n\n\n  // -------------------------------Select Tags AutoComplete Field-----------------------\n  showval(event: any) {\n    if (event.keyCode == 13) {\n      this.tags_array.push(event.target.value);\n      this.blogManagementForm.controls['tags'].patchValue(\"\");\n      return;\n    }\n\n  }\n  // ------------------------------------------------------------------------------------\n\n\n\n\n  // ---------------------------------------VIDEO URL PREVIEW-----------------------------\n  preview_video(video_index) {\n    this.openDialog(this.blogManagementForm.value.credentials[video_index].video_url);\n  }\n  // -------------------------------------------------------------------------------------\n\n\n\n\n\n  // --------------------------------------------CLEAR TAGS---------------------------------\n  clearTags(index) {\n    this.tags_array.splice(index, 1);\n  }\n  // -------------------------------------------------------------------------------------\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(YoutubeComponent, {\n      // duration: 1500,\n      panelClass: ['snackbar-color']\n    });\n  }\n\n}\n\n\n\n\n\n\n\n\n// ------------------------------------Modal Component Works------------------------------\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n  videoid: any = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n// ---------------------------------------------------------------------------------------\n@Component({\n  templateUrl: 'youtubetip.html',\n  styleUrls: ['./addedit-blogmanagement.component.css']\n})\nexport class YoutubeComponent {\n\n}\n\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id:any;\n\n  @Input()          //setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+id);\n  }\n  constructor(public sanitizer:DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n\n\n@Component({\n  selector: 'lib-listing-blogmanagementlib',\n  templateUrl: './listing-blogmanagementlib.component.html',\n  styleUrls: ['./listing-blogmanagementlib.component.css']\n})\nexport class ListingBlogmanagementlibComponent implements OnInit {\n  // ----------------------------variable declarations-----------------------\n  public blogData: any;\n  public blogListingConfig: any;\n  public loader: boolean = true;\n  // date_search_endpoint is use for All search endpoint\ndate_search_endpoint: any='datalist';\n\n\n// this is a database All search collection or view name\ndate_search_source: any='blogs_view';\n  // ----------------------------------------------------------------------------\n\n\n\n\n\n  // --------------------------Lib Listing Input from App------------------------\n  @Input()\n  set config(receivedCategoryData: any) {\n    console.log(\"END\",receivedCategoryData);\n    this.blogListingConfig = {\n      \n      apiUrl: receivedCategoryData.apiBaseUrl,\n      listEndPoint: \"datalist\",\n      datasource: receivedCategoryData.datasource,\n      tableName: receivedCategoryData.tableName,\n      tableName2:receivedCategoryData.tableName2,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\n      \"blogcontent\",\"metatitle\",\"metadesc\"],\n      listArray_modify_header: {\n        \"blogtitle\": \"Blog Title\", \"blogcategory\": \"Blog Category\",\n        \"blogcontent\": \"Blog Content\", \"priority\": \"Priority\", \"status\": \"Status\",\n        \"metatitle\": \"Meta Title\",\"metadesc\":\"Meta Description\",\"credentials\":\"Credentials\",\n        \"tags\":\"Number of tags\",\"publication\":\"Publication\",\"videos\":\"Number of videos\"\n        \n      },   \n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedCategoryData.updateEndpoint,\n      editUrl: receivedCategoryData.editUrl,\n      jwtToken: receivedCategoryData.jwtToken,\n      deleteEndPoint: receivedCategoryData.deleteEndPoint,\n     \n       search_settings: \n   {\n     \n     textsearch: [{ label: \"Search By Title\", field: 'blogtitle' },\n     { label: \"Search By Blog Category\", field: 'blogcat' },\n     { label: \"Search By Tags\", field:'tags' }],\n   },\n     \n    \n   \n    //   search_settings:{\n    //     textsearch:[{label:\"Search By Blog title\",field:'blogtitle'},\n    //     {label:\"Search By Blog Category\",field:'blogcat'},\n    //     {label:\"Search By Tags\",field:'tags'}],\n    //     datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search By Date\",  field:\"created_at\"}],                \n    // }\n    }\n    this.loader = false;\n  }\n  // ---------------------------------------------------------------------------------\n\n\n\n\n\n  constructor(private apiService: ApiService) {\n\n  }\n\n  ngOnInit() {\n\n  }\n}","import { NgModule } from '@angular/core';\nimport { BlogComponent } from './blog.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DemoMaterialModule } from './material-module'\nimport { from } from 'rxjs';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AddBlogComponent, Dialogtest  } from './add-blog/add-blog.component';\nimport { ListingModule } from 'lib-listing';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { ApiService } from './api.service';\nimport { AddeditBlogmanagementComponent,Modal, YoutubeComponent } from './addedit-blogmanagement/addedit-blogmanagement.component';\nimport { YoutubeplayerComponent } from './youtubeplayer/youtubeplayer.component';\nimport { ListingBlogmanagementlibComponent } from './listing-blogmanagementlib/listing-blogmanagementlib.component';\n// import { ListingBlogmanagementlibComponent } from './listing-blogmanagementlib/listing-blogmanagementlib.component';\n\n@NgModule({\n  declarations: [\n    BlogComponent,\n    AddBlogComponent,\n    Dialogtest,\n    AddeditBlogmanagementComponent,\n    Modal,\n    YoutubeplayerComponent,\n    YoutubeComponent,\n    ListingBlogmanagementlibComponent\n  ],\n  imports: [\n    DemoMaterialModule,\n    RouterModule,\n    AppRoutingModule,\n    ListingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    CKEditorModule,\n    ListingModule\n  ],\n  exports: [BlogComponent, AddBlogComponent, AddeditBlogmanagementComponent,ListingBlogmanagementlibComponent],\n  providers: [ApiService],\n  entryComponents: [Dialogtest,Modal, YoutubeComponent],\n\n})\nexport class BlogModule { }\n"]}