{"version":3,"sources":["ng://blog/lib/blog.service.ts","ng://blog/lib/blog.component.ts","ng://blog/lib/material-module.ts","ng://blog/lib/add-blog/add-blog.component.ts","ng://blog/lib/app-routing.module.ts","ng://blog/lib/api.service.ts","ng://blog/lib/addedit-blogmanagement/addedit-blogmanagement.component.ts","ng://blog/lib/youtubeplayer/youtubeplayer.component.ts","ng://blog/lib/listing-blogmanagementlib/listing-blogmanagementlib.component.ts","ng://blog/lib/blog.module.ts"],"names":["BlogService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","BlogComponent","Object","defineProperty","receivedData","blogListConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","blogtitle","description","priority","status","parentcategoryname","admintablenameTableName","statusarr","val","name","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","view","search_settings","textsearch","label","field","selectsearch","values","loader","ngOnInit","Component","selector","template","Input","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddBlogComponent","generateForm","getParentData","configData","action","buttonText","successMessage","setDefaultValue","defaultData","header_txt","defaultValue","blogCatForm","patchValue","parent_id","formBuilder","group","Validators","required","maxLength","getConfig","openDialog","x","dialogRef","dialog","open","Modal2","width","data","msg","afterClosed","subscribe","result","_this","postData","source","token","blogService","endpoint2","response","getParentCatArr","onSubmit","controls","markAsTouched","invalid","value","parseInt","assign","condition","sourceobj","setTimeout","close","router","navigate","callBack","alert","error","inputBlur","markAsUntouched","FormBuilder","Router","MatDialog","Editor","ClassicEditor","editorConfig","placeholder","model","editorData","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","appRoutes","path","component","AppRoutingModule","imports","RouterModule","forRoot","ApiService","setServerUrl","subjectForServerUrl","next","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","console","log","addendpointUrl","uploadFile","uploadEndpointUrl","updateendpointUrl","deletesingle_endpointUrl","updatestatus_single_endpointUrl","Subject","subscriptionServer","message","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","AddeditBlogmanagementComponent","serverUrlData","endpointUrlval","getDataEndpointData","addEndpointData","listval","listUrl","apiservice","activatedRoute","snapshot","params","id","addYoutubeVideo","getBlogCategory","getTagsCount","action2","headerText","flag","params_id","setData","_id","blogManagementForm","blogcat","metatitle","metadesc","blogs_image","blogs_file","author","i","length","img_var","basepath","image","image_name","image_type","type","images_array_edit","push","images_array","i2","file_array_edit","file_array","file","vid","credentials","video_url","video_title","video_description","tags","forEach","element","tags_array","filteredOptions","myControl","valueChanges","startWith","_filter","filterValue","toLowerCase","options","filter","option","indexOf","imageConfigData","fileConfigData","Modal","height","trackByFn","index","vid_url","vid_tit","vid_desc","deleteCreds","removeAt","blogCategoryArray","editDatavals","loop","files","concat","upload","valid","messageText","isSubmitted","navigateByUrl","showval","event","keyCode","target","preview_video","video_index","clearTags","splice","openSnackBar","snackBar","openFromComponent","YoutubeComponent","panelClass","clear_image","pop","clearFileTags","ActivatedRoute","MatSnackBar","http","video_prefix","FormControl","testTag","array","videoid","YoutubeplayerComponent","sanitizer","bypassSecurityTrustResourceUrl","DomSanitizer","ListingBlogmanagementlibComponent","apiService","BlogModule","declarations","ListingModule","HttpClientModule","FormsModule","ReactiveFormsModule","BrowserModule","CKEditorModule","FileUploadModule","CommonModule","providers","entryComponents"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogService {\r\n  public lengthis;\r\n  public percentageis;\r\n  public inprogress;\r\n  public progress: any = [];\r\n  public uploadtype;\r\n  public uploaderror: any = '';\r\n  public accesstoken: any = this.cookieService.get('jwtToken');;\r\n  public fileservername: any = [];\r\n  public serverUrl: any = '';\r\n  public addendpointUrl: any;\r\n  public updateendpointUrl: any;\r\n  public deletesingle_endpointUrl: any;\r\n  public updatestatus_single_endpointUrl: any;\r\n  public deletemultiple_endpointUrl: any;\r\n  public updatestatus_multiple_endpointUrl: any;\r\n  public getdata_endpointUrl: any = 'datalist';\r\n\r\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\r\n\r\n  isTokenExpired() {\r\n    // const helper = new JwtHelperService();\r\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n    // console.log('id_token isExpired:',isIdTokenExpired)\r\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n  }\r\n\r\n  addData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  getData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteSingleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteMultipleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  CustomRequest(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RouterModule, Routes, Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from './api.service';\r\n\r\n@Component({\r\n  selector: 'lib-Blog',\r\n  templateUrl: 'blog.component.html',\r\n  styleUrls: ['style.css']\r\n})\r\nexport class BlogComponent implements OnInit {\r\n \r\n  // ===========================================declaration================================\r\n  blogListConfig:any;\r\n  loader:boolean=false;\r\n  // ======================================================================================\r\n\r\n  // ================================================Input For Lib Listing================================\r\n  @Input()\r\n  set config(receivedData: any) {\r\n   \r\n    this.blogListConfig = {\r\n      apiUrl: receivedData.apiBaseUrl,\r\n      listEndPoint: receivedData.listEndPoint,\r\n      datasource: receivedData.datasource,\r\n      tableName: receivedData.tableName,\r\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"updated_at\",\"image\",\"description_html\"],\r\n      listArray_modify_header: { \"blogtitle\":\"Blog Title\", \"description\": \"Description\", \"priority\": \"Priority\", \"status\": \"Status\" ,\"parentcategoryname\":\"Parent Category Name\"},\r\n      admintablenameTableName: \"admin\",\r\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\r\n      updateurl: receivedData.updateEndpoint,\r\n      editUrl: receivedData.editUrl,\r\n      jwtToken: receivedData.jwtToken,\r\n      deleteEndPoint: receivedData.deleteEndPoint,\r\n      view: receivedData.view,\r\n      search_settings:{\r\n        textsearch: [{ label: \"Search by blog title...\", field: 'blogtitle' },{ label: \"Search by parent category...\", field: 'parentcategoryname' }],\r\n        selectsearch: [{ label: 'Search By status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\r\n      },\r\n      //  /*Showing Image in the Modal*/\r\n      //  pendingmodelapplicationarray_detail_datatype: [{\r\n      //   key: \"image\",\r\n      //   value: 'image',\r\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \r\n      // }],\r\n    }\r\n    this.loader = false;\r\n  }\r\n  // ====================================================================================================\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n//import { MatFileUploadModule } from 'angular-material-fileupload';\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    //MatFileUploadModule\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BlogService } from '../blog.service';\r\n\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nexport interface DialogData {\r\n  msg: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'lib-add-blog',\r\n  templateUrl: './add-blog.component.html',\r\n  styleUrls: ['./add-blog.component.css']\r\n})\r\nexport class AddBlogComponent implements OnInit {\r\n\r\n  /**ckeditor start here*/\r\n  public Editor = ClassicEditor;  //for ckeditor\r\n  editorConfig = {\r\n    placeholder: 'Type the content here!',\r\n  };\r\n  public model = {\r\n    editorData: ''\r\n  };\r\n  /**ckeditor end here*/\r\n\r\n\r\n  // ====================declarations==================\r\n  blogCatForm: FormGroup;\r\n  header_txt: any = \"Add Blog Category\";\r\n  buttonText: any = \"SUBMIT\";\r\n  configData: any;\r\n  loader: boolean = false;\r\n  successMessage: any = \"Submitted Successfully!!!\"\r\n  getParentCatArr: any = [];\r\n  dialogRef:any;\r\n  // ==================================================\r\n\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private blogService: BlogService, private router: Router,\r\n    private cookieService: CookieService,public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    //generating the form\r\n    this.generateForm();\r\n    //getting the parent category\r\n    this.getParentData();\r\n    // --------------------------------checking the cases------------------------ \r\n    switch (this.configData.action) {\r\n      case 'add':\r\n        /* Button text */\r\n        this.buttonText = \"SUBMIT\";\r\n        break;\r\n      case 'edit':\r\n        /* Button text */\r\n        this.buttonText = \"UPDATE\";\r\n        this.successMessage = \"One row updated\";\r\n        this.setDefaultValue(this.configData.defaultData);\r\n        this.header_txt = \"EDIT\";\r\n        break;\r\n    }\r\n    // --------------------------------------------------------------------------\r\n\r\n  }\r\n\r\n\r\n  // ================================================Default value======================================\r\n  setDefaultValue(defaultValue) {\r\n    this.blogCatForm.patchValue({\r\n      blogtitle: defaultValue.blogtitle,\r\n      priority: defaultValue.priority,\r\n      status: defaultValue.status,\r\n      description: defaultValue.description,\r\n      parent_id: defaultValue.parent_id\r\n    });\r\n\r\n  }\r\n  // ==================================================================================================\r\n\r\n\r\n  //  ============================GENERATING THE FORM=======================\r\n  generateForm() {\r\n    this.blogCatForm = this.formBuilder.group({\r\n      blogtitle: ['',[Validators.required,Validators.maxLength(50)]],\r\n      priority: ['',[Validators.required,Validators.maxLength(2)]],\r\n      status: [true,],\r\n      description: ['',[Validators.required,Validators.maxLength(100)]],\r\n      parent_id: [0,]\r\n    });\r\n  }\r\n  // ========================================================================\r\n\r\n\r\n  //  Getting the input Configuration \r\n  @Input()\r\n  set config(getConfig: any) {\r\n    this.configData = getConfig;\r\n   \r\n  }\r\n\r\n  // =========================================MODAL functions==========================================\r\n  openDialog(x: any): void {\r\n    this.dialogRef = this.dialog.open(Modal2, {\r\n      width: '250px',\r\n      data: { msg: x }\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n  // ===================================================================================================\r\n\r\n\r\n\r\n\r\n//Getting the parent category\r\n  getParentData() {\r\n    let postData: any = {\r\n      source: this.configData.source,\r\n      token: this.cookieService.get('jwtToken')\r\n\r\n    };\r\n    this.blogService.getData(this.configData.endpoint2 + 'datalist', postData).subscribe((response: any) => {\r\n      this.getParentCatArr = response.res;\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // =========================SUBMIT function==================\r\n  onSubmit() {\r\n    this.blogCatForm.controls['description'].markAsTouched();\r\n   \r\n    this.loader = true;\r\n    /* stop here if form is invalid */\r\n    if (this.blogCatForm.invalid) {\r\n      return;\r\n    } else {\r\n      if (this.blogCatForm.value.status) {\r\n        this.blogCatForm.value.status = parseInt(\"1\");\r\n      } else {\r\n        this.blogCatForm.value.status = parseInt(\"0\");;\r\n      }\r\n\r\n      /* start process to submited data */\r\n      let postData: any = {\r\n        source: this.configData.source,\r\n        data: Object.assign(this.blogCatForm.value, this.configData.condition),\r\n        \"sourceobj\": [\"parent_id\"]\r\n      };\r\n      \r\n      this.blogService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\r\n        if (response.status == \"success\") {\r\n         \r\n          this.openDialog(this.successMessage);\r\n          setTimeout(() => {\r\n            this.dialogRef.close();\r\n          }, 2000);\r\n\r\n          this.router.navigate([this.configData.callBack]);\r\n        } else {\r\n          alert(\"Some error occurred. Please try again.\");\r\n        }\r\n      }, (error) => {\r\n        alert(\"Some error occurred. Please try again.\");\r\n      });\r\n    }\r\n  }\r\n  // ==========================================================\r\n\r\n\r\n  //Blur function\r\n  inputBlur(val: any) {\r\n    this.blogCatForm.controls[val].markAsUntouched();\r\n  }\r\n}\r\n\r\n// ============================================MODAL COMPONENT===========================================\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: 'modal.html',\r\n})\r\nexport class Modal2 {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<Modal2>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n// ======================================================================================================\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MetaGuard } from '@ngx-meta/core';\r\nimport { AddBlogComponent } from './add-blog/add-blog.component'\r\nconst appRoutes: Routes = [\r\n  {path:'add', component : AddBlogComponent },\r\n  {path:'edit/:id', component : AddBlogComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\r\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n// for setting observables to get serverurl and endpointurl from app\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport{CookieService} from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({   \r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  public lengthis;\r\n  public percentageis;\r\n  public inprogress;\r\n  public progress: any = [];\r\n  public uploadtype;\r\n  public uploaderror: any = '';\r\n  public accesstoken:any=this.cookieService.get('jwtToken');\r\n  fileservername: any = [];\r\n  serverUrl: any;\r\n  addendpointUrl: any;\r\n  uploadEndpointUrl:any; //souresh\r\n  updateendpointUrl: any;\r\n  deletesingle_endpointUrl: any;\r\n  updatestatus_single_endpointUrl: any;\r\n  deletemultiple_endpointUrl: any;\r\n  updatestatus_multiple_endpointUrl: any;\r\n  getdata_endpointUrl: any;\r\n  private subjectForServerUrl = new Subject<any>();\r\n  private subjectForaddEndpointUrl = new Subject<any>();\r\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\r\n  private subjectForupdateEndpointUrl = new Subject<any>();\r\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\r\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\r\n  private subjectForGetdataEndpointUrl = new Subject<any>();\r\n  public subscriptionServer: Subscription;\r\n  public subscriptionaddEndpoint: Subscription;\r\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\r\n  public subscriptionupdateEndpoint: Subscription;\r\n  public subscriptiondeletesingleEndpoint: Subscription;\r\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\r\n  public subscriptionGetdataEndpoint: Subscription;\r\n\r\n  constructor(private _http: HttpClient,\r\n    private _authHttp: HttpClient,private cookieService :CookieService) {\r\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\r\n     let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.serverUrl = result;\r\n      } else {\r\n        this.serverUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.addendpointUrl = result;\r\n      } else {\r\n        this.addendpointUrl = null;\r\n      }\r\n    });\r\n    /*********added by souresh***********/\r\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\r\n      let result:any;\r\n      result=message;\r\n        if(result!=null){\r\n          this.uploadEndpointUrl = result;\r\n        } else{\r\n          this.uploadEndpointUrl = null;\r\n        }\r\n    })\r\n    /************souresh end here**************/\r\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.updateendpointUrl = result;\r\n      } else {\r\n        this.updateendpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.deletesingle_endpointUrl = result;\r\n      } else {\r\n        this.deletesingle_endpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.updatestatus_single_endpointUrl = result;\r\n      } else {\r\n        this.updatestatus_single_endpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.getdata_endpointUrl = result;\r\n      } else {\r\n        this.getdata_endpointUrl = null;\r\n      }\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  setServerUrl(value: any) {\r\n    this.subjectForServerUrl.next(value);\r\n  }\r\n  public clearServerUrl() {\r\n    this.subjectForServerUrl.next(null);\r\n  }\r\n  public getServerUrl(): Observable<any> {\r\n    return this.subjectForServerUrl.asObservable();\r\n  }\r\n\r\n  setaddEndpoint(value: any) {\r\n    this.subjectForaddEndpointUrl.next(value);\r\n  }\r\n  public clearaddEndpoint() {\r\n    this.subjectForaddEndpointUrl.next(null);\r\n  }\r\n  public getaddEndpoint(): Observable<any> {\r\n    return this.subjectForaddEndpointUrl.asObservable();\r\n  }\r\n/*****added by souresh******/\r\n  setuploadEndpont(value:any){\r\n    this.subjectForuploadEndpointUrl.next(value);\r\n  }\r\n  public clearuploadEndpoint(){\r\n    this.subjectForuploadEndpointUrl.next(null);\r\n  }\r\n  public getuploadEndpoint(): Observable <any> {\r\n    return this.subjectForuploadEndpointUrl.asObservable();\r\n  }\r\n   /********souresh end here********/\r\n\r\n\r\n  setupdateEndpoint(value: any) {\r\n    this.subjectForupdateEndpointUrl.next(value);\r\n  }\r\n  public clearupdateEndpoint() {\r\n    this.subjectForupdateEndpointUrl.next(null);\r\n  }\r\n  public getupdateEndpoint(): Observable<any> {\r\n    return this.subjectForupdateEndpointUrl.asObservable();\r\n  }\r\n\r\n  setdeletesingleEndpoint(value: any) {\r\n    this.subjectFordeletesingleEndpointUrl.next(value);\r\n  }\r\n  public cleardeletesingleEndpoint() {\r\n    this.subjectFordeletesingleEndpointUrl.next(null);\r\n  }\r\n  public getdeletesingleEndpoint(): Observable<any> {\r\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\r\n  }\r\n\r\n  setupdatestatus_singleEndpoint(value: any) {\r\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\r\n  }\r\n  public clearupdatestatus_singleEndpoint() {\r\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\r\n  }\r\n  public getupdatestatus_singleEndpoint(): Observable<any> {\r\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\r\n  }\r\n\r\n  setgetdataEndpoint(value: any) {\r\n    this.subjectForGetdataEndpointUrl.next(value);\r\n  }\r\n  public cleargetdataEndpoint() {\r\n    this.subjectForGetdataEndpointUrl.next(null);\r\n  }\r\n  public getdataEndpoint(): Observable<any> {\r\n    return this.subjectForGetdataEndpointUrl.asObservable();\r\n  }\r\n\r\n\r\n\r\n  isTokenExpired() {\r\n\r\n    // const helper = new JwtHelperService();\r\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n    // console.log('id_token isExpired:',isIdTokenExpired)\r\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n  }\r\n\r\n  addData(requestdata: any) {\r\n    console.log('in adddata apiservice');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\r\n      })\r\n    };\r\n\r\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\r\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  /*******added by souresh************/\r\n  uploadFile(requestdata:any){\r\n    const httpOptions={\r\n        headers: new HttpHeaders({\r\n          'Content-Type':'application/json',\r\n          'Authorization':this.accesstoken          //hard code written Authorization(temp)\r\n        })\r\n    };\r\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\r\n    return result;\r\n  }\r\n  /*******souresh end here********/\r\n  UpdateData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  getData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteSingleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteMultipleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForSingleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForMultipleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  CustomRequest(requestdata: any, endpoint:any ) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n\r\n}","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormControl, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nexport interface DialogData {\r\n  msg: any;\r\n  videourl: any;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'lib-addedit-blogmanagement',\r\n  templateUrl: './addedit-blogmanagement.component.html',\r\n  styleUrls: ['./addedit-blogmanagement.component.css']\r\n})\r\n\r\nexport class AddeditBlogmanagementComponent implements OnInit {\r\n\r\n  /**ckeditor start here*/\r\n  public Editor = ClassicEditor;  //for ckeditor\r\n  editorConfig = {\r\n    placeholder: 'Description...',\r\n  };\r\n  public model = {\r\n    editorData: ''\r\n  };\r\n  /**ckeditor end here*/\r\n\r\n\r\n\r\n\r\n\r\n  // ---------------------declarations-------------------------------------\r\n  public headerText: any = 'Add Blog Management Data';\r\n  public buttonText: any = 'SUBMIT';\r\n  public blogCategoryArray: any = [];\r\n  public configData: any;\r\n  blogManagementForm: FormGroup;\r\n  public serverUrlData: any;\r\n  public getDataEndpointData: any;\r\n  public addEndpointData: any;\r\n  isSubmitted = false;\r\n  video_prefix: any = 'https://www.youtube.com/watch?v=';\r\n  options: any = [''];\r\n  filteredOptions: Observable<string[]>;\r\n  myControl = new FormControl();\r\n  tags_array: any = [];\r\n  dialogRef: any;\r\n  public params_id: any;\r\n  setData: any;\r\n  messageText: any;\r\n  listUrl: any;\r\n  testTag: any = [];\r\n  imageConfigData: any;\r\n  ErrCode: any;\r\n  img_var: any;\r\n  image_name: any;\r\n  image_type: any;\r\n  flag: boolean = false;\r\n  images_array: any = [];\r\n  images_array_edit: any = [];\r\n  fileConfigData: any;\r\n  file_array: any = [];\r\n  file_array_edit: any = [];\r\n  action2:any;\r\n  // -----------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n  // ----------------------------------------------Input Section-----------------------\r\n\r\n  // Input receiving from add/edit app \r\n  @Input()\r\n  set config(getConfig: any) {\r\n    this.configData = getConfig;\r\n\r\n  }\r\n\r\n  @Input()          //setting the server url from project\r\n  set serverUrl(serverUrl: any) {\r\n    this.serverUrlData = (serverUrl) || '<no name set>';\r\n    this.serverUrlData = serverUrl;\r\n  }\r\n\r\n  @Input()          //setting the server url from project\r\n  set getDataEndpoint(endpointUrlval: any) {\r\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\r\n    this.getDataEndpointData = endpointUrlval;\r\n\r\n\r\n  }\r\n  @Input()          //setting the server url from project\r\n  set addEndpoint(endpointUrlval: any) {\r\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\r\n    this.addEndpointData = endpointUrlval;\r\n\r\n  }\r\n\r\n\r\n  @Input()         //setting the listing url form the application\r\n  set listRoute(listval: any) {\r\n    this.listUrl = (listval) || '<no name set>';\r\n    this.listUrl = listval;\r\n\r\n  }\r\n  // -----------------------------------------------------------------------------------------\r\n\r\n  constructor(private http: HttpClient, private apiservice: ApiService,\r\n    private activatedRoute: ActivatedRoute, private router: Router,\r\n    private formBuilder: FormBuilder, public dialog: MatDialog,\r\n    public snackBar: MatSnackBar) {\r\n    this.blogManagementForm = this.formBuilder.group({\r\n      blogtitle: ['', [Validators.required,Validators.maxLength(30)]],\r\n      blogcat: ['', ],\r\n      description: ['', [Validators.required,Validators.maxLength(50)]],\r\n      priority: ['', [Validators.required,Validators.maxLength(2)]],\r\n      status: ['true', Validators.required],\r\n      metatitle: ['', [Validators.required,Validators.maxLength(20)]],\r\n      metadesc: ['', [Validators.required,Validators.maxLength(50)]],\r\n      author:['',[Validators.required,Validators.maxLength(20)]],\r\n      credentials: this.formBuilder.array([]),\r\n      tags: [''],\r\n      blogs_image: [''],\r\n      blogs_file: ['']\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    /**Observable start here**/\r\n    this.apiservice.clearServerUrl();\r\n    setTimeout(() => {\r\n      this.apiservice.setServerUrl(this.serverUrlData);\r\n    }, 50);\r\n    this.apiservice.cleargetdataEndpoint();\r\n    setTimeout(() => {\r\n      this.apiservice.setgetdataEndpoint(this.getDataEndpointData);\r\n    }, 50);\r\n    this.apiservice.clearaddEndpoint();\r\n    setTimeout(() => {\r\n      this.apiservice.setaddEndpoint(this.addEndpointData);\r\n    }, 50);\r\n    /**Observable end here**/\r\n\r\n    if (!this.activatedRoute.snapshot.params.id)\r\n      setTimeout(() => {\r\n        this.addYoutubeVideo('', '', '');\r\n      }, 500)\r\n\r\n    setTimeout(() => {\r\n      this.getBlogCategory();\r\n    }, 50)\r\n\r\n\r\n    setTimeout(() => {\r\n      this.getTagsCount();\r\n    }, 50)\r\n\r\n\r\n    if (this.action2=='edit') {\r\n      this.headerText=\"Edit Blog Management Data\";\r\n      this.flag = true;\r\n      this.params_id = this.setData._id;\r\n      this.buttonText = \"Update\";\r\n      this.blogManagementForm.controls['blogtitle'].patchValue(this.setData.blogtitle);\r\n      this.blogManagementForm.controls['blogcat'].patchValue(this.setData.blogcat);\r\n      this.blogManagementForm.controls['description'].patchValue(this.setData.description);\r\n      this.blogManagementForm.controls['priority'].patchValue(this.setData.priority);\r\n      this.blogManagementForm.controls['status'].patchValue(this.setData.status);\r\n      this.blogManagementForm.controls['metatitle'].patchValue(this.setData.metatitle);\r\n      this.blogManagementForm.controls['metadesc'].patchValue(this.setData.metadesc);\r\n      this.blogManagementForm.controls['blogs_image'].patchValue(this.setData.blogs_image);\r\n      this.blogManagementForm.controls['blogs_file'].patchValue(this.setData.blogs_file);\r\n      this.blogManagementForm.controls['author'].patchValue(this.setData.author);\r\n\r\n\r\n      /*Image works*/\r\n      for (let i = 0; i < this.setData.blogs_image.length; i++) {\r\n        this.img_var = this.setData.blogs_image[i].basepath + this.setData.blogs_image[i].image;\r\n        this.image_name = this.setData.blogs_image[i].name;\r\n        this.image_type = this.setData.blogs_image[i].type;\r\n        this.images_array_edit.push({ 'img_var': this.img_var, 'image_name': this.image_name, 'image_type': this.image_type });\r\n        this.images_array.push({\r\n          \"basepath\": this.setData.blogs_image[i].basepath,\r\n          \"image\": this.setData.blogs_image[i].image,\r\n          \"name\": this.setData.blogs_image[i].name,\r\n          \"type\": this.setData.blogs_image[i].type\r\n        });\r\n      }\r\n\r\n      /*File works*/\r\n      for (let i2 = 0; i2 < this.setData.blogs_file.length; i2++) {\r\n        this.file_array_edit.push(this.setData.blogs_file[i2].name);\r\n        this.file_array.push({\r\n          \"basepath\": this.setData.blogs_file[i2].basepath,\r\n          \"file\": this.setData.blogs_file[i2].file,\r\n          \"name\": this.setData.blogs_file[i2].name,\r\n          \"type\": this.setData.blogs_file[i2].type\r\n        });\r\n      }\r\n\r\n\r\n      for (const vid in this.setData.credentials) {\r\n        this.addYoutubeVideo(this.setData.credentials[vid].video_url,\r\n          this.setData.credentials[vid].video_title,\r\n          this.setData.credentials[vid].video_description);\r\n      }\r\n\r\n      if (this.setData.tags != \"\")\r\n        this.setData.tags.forEach(element => {\r\n          this.tags_array.push(element);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // ------------------------------Autocomplete Functions----------------------------------\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value))\r\n    );\r\n    // ------------------------------------------------------------------------------------------\r\n  }\r\n\r\n\r\n  // ------------------------------------_Filter FUnction----------------------------------\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n  // --------------------------------------------------------------------------------------------\r\n\r\n\r\n  @Input()\r\n  set action(action: any) {\r\n    this.action2 = action;\r\n  }\r\n\r\n\r\n  @Input()\r\n  set imageUpload(getConfig: any) {\r\n    this.imageConfigData = getConfig;\r\n  }\r\n\r\n  @Input()\r\n  set fileUpload(getConfig: any) {\r\n    this.fileConfigData = getConfig;\r\n  }\r\n\r\n\r\n\r\n\r\n  // ------------------------------------MODAL Function--------------------------------------------\r\n  openDialog(x: any): void {\r\n    this.dialogRef = this.dialog.open(Modal, {\r\n      width: '45%',\r\n      height: '500px',\r\n      data: { msg: x }\r\n\r\n    });\r\n\r\n    // this.sanitizer.bypassSecurityTrustResourceUrl\r\n    this.dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n  // ----------------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // ----------------------------Ediatble material Form Array-------------------\r\n  trackByFn(index) {\r\n    return index;\r\n  }\r\n  // -----------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // ----------------------------------Add Credential Fucntions-----------------\r\n  addYoutubeVideo(vid_url: any, vid_tit: any, vid_desc: any) {\r\n    const creds = this.blogManagementForm.controls.credentials as FormArray;\r\n    creds.push(this.formBuilder.group({\r\n      video_url: [vid_url],\r\n      video_title: [vid_tit],\r\n      video_description: [vid_desc]\r\n    }));\r\n  }\r\n  // ---------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // ---------------------------------Delete Credetial Fucntions----------------\r\n  deleteCreds() {\r\n    const creds = this.blogManagementForm.controls.credentials as FormArray;\r\n    creds.removeAt(1);\r\n  }\r\n  // ----------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // ----------------------------------Get Blog Category Function-------------------\r\n\r\n  getBlogCategory() {\r\n    var data: any;\r\n    data = {\r\n      'source': 'blog_category'\r\n    };\r\n    this.apiservice.getData(data).subscribe(response => {\r\n      let result: any;\r\n      result = response;\r\n      this.blogCategoryArray = result.res;\r\n    });\r\n  }\r\n  // ----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n  // ----------------------------------TAGS view Function-------------------\r\n\r\n  getTagsCount() {\r\n    var data: any;\r\n    data = {\r\n      'source': 'tags_view'\r\n    };\r\n    this.apiservice.getData(data).subscribe(response => {\r\n      let result: any;\r\n      result = response;\r\n      if (result != null && result.res != null && result.res[0] != null)      \r\n        this.options=result.res[0].tags;\r\n      \r\n       \r\n\r\n\r\n    });\r\n  }\r\n  // ----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n  //  -----------------------------EDIT RESOLVE FUNCTION------------------------------\r\n  @Input()          //single data from resolve call  & set the value for edit\r\n  set singleData(editDatavals: any) {\r\n    this.setData = editDatavals;\r\n  }\r\n  // -----------------------------------------------------------------------------------\r\n\r\n\r\n  // ---------------------------------SUBMIT----------------------------------------\r\n  onSubmit() {\r\n     \r\n    /*__________________________IMAGE UPLOADER________________________________________*/\r\n    if (this.imageConfigData) {\r\n      for (const loop in this.imageConfigData.files) {\r\n        this.images_array =\r\n          this.images_array.concat({\r\n            \"basepath\": this.imageConfigData.files[loop].upload.data.basepath + '/' + this.imageConfigData.path + '/',\r\n            \"image\": this.imageConfigData.files[loop].upload.data.data.fileservername,\r\n            \"name\": this.imageConfigData.files[loop].name,\r\n            \"type\": this.imageConfigData.files[loop].type\r\n          });\r\n      }\r\n      this.blogManagementForm.value.blogs_image = this.images_array;\r\n    } else {\r\n      this.blogManagementForm.value.blogs_image = false;\r\n    }\r\n    /*_____________________________________________________________________________________*/\r\n\r\n\r\n    /*_________________________________________FILE UPLOADER_______________________________*/\r\n\r\n    if (this.fileConfigData) {\r\n      for (const loop in this.fileConfigData.files) {\r\n        this.file_array =\r\n          this.file_array.concat({\r\n            \"basepath\": this.fileConfigData.files[loop].upload.data.basepath + '/' + this.fileConfigData.path + '/',\r\n            \"file\": this.fileConfigData.files[loop].upload.data.data.fileservername,\r\n            \"name\": this.fileConfigData.files[loop].name,\r\n            \"type\": this.fileConfigData.files[loop].type\r\n          });\r\n      }\r\n      this.blogManagementForm.value.blogs_file = this.file_array;\r\n    } else {\r\n      this.blogManagementForm.value.blogs_file = false;\r\n    }\r\n    // ___________________________________________________________________________________\r\n\r\n    this.blogManagementForm.value.tags = this.tags_array;\r\n\r\n    this.blogManagementForm.controls['description'].markAsTouched();\r\n\r\n    if (this.blogManagementForm.valid) {\r\n      if (this.blogManagementForm.value.status)\r\n        this.blogManagementForm.value.status = parseInt(\"1\");\r\n      else\r\n        this.blogManagementForm.value.status = parseInt(\"0\");\r\n      if (this.params_id!= null) {    //update part\r\n        this.messageText = \"One row updated!!!\";\r\n        this.blogManagementForm.value.tags = this.tags_array;\r\n        data = {\r\n          \"source\": \"blogs\",\r\n          \"data\": {\r\n            \"id\": this.params_id,\r\n            \"blogtitle\": this.blogManagementForm.value.blogtitle,\r\n            \"blogcat\": this.blogManagementForm.value.blogcat,\r\n            \"description\": this.blogManagementForm.value.description,\r\n            \"priority\": this.blogManagementForm.value.priority,\r\n            \"status\": this.blogManagementForm.value.status,\r\n            \"metatitle\": this.blogManagementForm.value.metatitle,\r\n            \"metadesc\": this.blogManagementForm.value.metadesc,\r\n            \"tags\": this.blogManagementForm.value.tags,\r\n            \"credentials\": this.blogManagementForm.value.credentials,\r\n            \"blogs_image\": this.blogManagementForm.value.blogs_image,\r\n            \"blogs_file\": this.blogManagementForm.value.blogs_file,\r\n            \"author\":this.blogManagementForm.value.author\r\n\r\n          },\r\n          \"sourceobj\": [\"blogcat\"]\r\n        };\r\n      } else {\r\n        this.isSubmitted = true;\r\n        var data: any;\r\n        data = {                                         //add part\r\n          \"source\": \"blogs\",\r\n          \"data\": this.blogManagementForm.value,\r\n          \"sourceobj\": [\"blogcat\"]\r\n        };\r\n      }\r\n\r\n      this.apiservice.addData(data).subscribe(response => {\r\n        let result: any;\r\n        result = response;\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n          this.router.navigateByUrl('/' + this.listUrl);\r\n        }, 3000);\r\n\r\n      });\r\n\r\n\r\n    }\r\n    else\r\n    console.log(\"Form is invalid\");\r\n    \r\n  }\r\n\r\n\r\n  // -----------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n  get onSignUpValidate() {\r\n    return this.blogManagementForm.controls;\r\n  }\r\n\r\n\r\n  inputBlur(val: any) {\r\n    this.blogManagementForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // -------------------------------Select Tags AutoComplete Field-----------------------\r\n  showval(event: any) {\r\n    \r\n    if (event.keyCode == 13) {\r\n      this.tags_array.push(event.target.value);\r\n      this.blogManagementForm.controls['tags'].patchValue(\"\");\r\n      return;\r\n    }\r\n\r\n  }\r\n  // ------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n  // ---------------------------------------VIDEO URL PREVIEW-----------------------------\r\n  preview_video(video_index) {\r\n    this.openDialog(this.blogManagementForm.value.credentials[video_index].video_url);\r\n  }\r\n  // -------------------------------------------------------------------------------------\r\n\r\n\r\n  // --------------------------------------------CLEAR TAGS---------------------------------\r\n  clearTags(index) {\r\n    this.tags_array.splice(index, 1);\r\n  }\r\n  // -------------------------------------------------------------------------------------\r\n\r\n  openSnackBar() {\r\n    this.snackBar.openFromComponent(YoutubeComponent, {\r\n      // duration: 1500,\r\n      panelClass: ['snackbar-color']\r\n    });\r\n  }\r\n  // --------------------------------------Blogs Image clear-------------------------------\r\n  clear_image(index) {\r\n    this.images_array.pop(this.setData.blogs_image[index]);\r\n    this.images_array_edit.splice(index, 1);\r\n  }\r\n  // ------------------------------------------------------------------------------------\r\n\r\n  // --------------------------------------Blogs File clear-------------------------------\r\n  clearFileTags(index) {\r\n    this.file_array.pop(this.setData.blogs_file[index]);\r\n    this.file_array_edit.splice(index, 1);\r\n  }\r\n  // ------------------------------------------------------------------------------------\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ------------------------------------Modal Component Works------------------------------\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: 'modal.html',\r\n})\r\nexport class Modal {\r\n  videoid: any = '';\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<Modal>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n// ---------------------------------------------------------------------------------------\r\n@Component({\r\n  templateUrl: 'youtubetip.html',\r\n  styleUrls: ['./addedit-blogmanagement.component.css']\r\n})\r\nexport class YoutubeComponent {\r\n\r\n}\r\n\r\n","import { Component, OnInit , Input} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'lib-youtubeplayer',\r\n  templateUrl: './youtubeplayer.component.html',\r\n  styleUrls: ['./youtubeplayer.component.css']\r\n})\r\nexport class YoutubeplayerComponent implements OnInit {\r\n  id:any;\r\n\r\n  @Input()          //setting the server url from project\r\n  set videoid(id: any) {\r\n    this.id = (id) || '<no name set>';\r\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+id);\r\n  }\r\n  constructor(public sanitizer:DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'lib-listing-blogmanagementlib',\r\n  templateUrl: './listing-blogmanagementlib.component.html',\r\n  styleUrls: ['./listing-blogmanagementlib.component.css']\r\n})\r\nexport class ListingBlogmanagementlibComponent implements OnInit {\r\n\r\n\r\n\r\n  // ===========================================declaration================================\r\n  blogListConfig: any;\r\n  loader: boolean = false;\r\n  // ======================================================================================\r\n\r\n  // ================================================Input For Lib Listing================================\r\n  @Input()\r\n  set config(receivedData: any) {\r\n\r\n    this.blogListConfig = {\r\n      apiUrl: receivedData.apiBaseUrl,\r\n      listEndPoint: receivedData.listEndPoint,\r\n      datasource: receivedData.datasource,\r\n      tableName: receivedData.tableName,\r\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"updated_at\", \"image\", \"metatitle\", \"metadesc\", \"description_html\", \"credentials\", \"blogs_file\", \"blogs_image\"],\r\n      listArray_modify_header: {\r\n        \"blogtitle\": \"Blog Title\", \"description\": \"Description\",\r\n        \"priority\": \"Priority\", \"status\": \"Status\", \"parentcategoryname\": \"Parent Category Name\",\r\n        \"author\": \"Author\"\r\n      },\r\n      admintablenameTableName: \"admin\",\r\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\r\n      updateurl: receivedData.updateEndpoint,\r\n      editUrl: receivedData.editUrl,\r\n      jwtToken: receivedData.jwtToken,\r\n      deleteEndPoint: receivedData.deleteEndPoint,\r\n      view: receivedData.view,\r\n      search_settings: {\r\n        textsearch: [{ label: \"Search by blog title...\", field: 'blogtitle' },{ label: \"Search by author...\", field: 'author' }],\r\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\r\n      },\r\n      //  /*Showing Image in the Modal*/\r\n      //  pendingmodelapplicationarray_detail_datatype: [{\r\n      //   key: \"image\",\r\n      //   value: 'image',\r\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \r\n      // }],\r\n    }\r\n    this.loader = false;\r\n  }\r\n  // ====================================================================================================\r\n\r\n\r\n\r\n  constructor(private apiService: ApiService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { BlogComponent } from './blog.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { DemoMaterialModule } from './material-module'\r\nimport { FileUploadModule } from 'file-upload';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AddBlogComponent,Modal2 } from './add-blog/add-blog.component';\r\nimport { ListingModule } from 'listing-angular7';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { ApiService } from './api.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddeditBlogmanagementComponent,Modal, YoutubeComponent } from './addedit-blogmanagement/addedit-blogmanagement.component';\r\nimport { YoutubeplayerComponent } from './youtubeplayer/youtubeplayer.component';\r\nimport { ListingBlogmanagementlibComponent } from './listing-blogmanagementlib/listing-blogmanagementlib.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BlogComponent,\r\n    AddBlogComponent,\r\n    \r\n    AddeditBlogmanagementComponent,\r\n    Modal,\r\n    YoutubeplayerComponent,\r\n    YoutubeComponent,\r\n    ListingBlogmanagementlibComponent,Modal2\r\n  ],\r\n  imports: [\r\n    DemoMaterialModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    ListingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    CKEditorModule,\r\n    ListingModule,\r\n    FileUploadModule,\r\n    CommonModule,\r\n  \r\n  ],\r\n  exports: [BlogComponent, AddBlogComponent, AddeditBlogmanagementComponent,ListingBlogmanagementlibComponent],\r\n  providers: [ApiService],\r\n  entryComponents: [Modal2,Modal, YoutubeComponent],\r\n\r\n})\r\nexport class BlogModule { }\r\n"]}