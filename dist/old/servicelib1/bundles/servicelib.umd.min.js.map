{"version":3,"sources":["ng://servicelib/lib/servicelib.service.ts","ng://servicelib/lib/servicelib.component.ts","ng://servicelib/lib/modules/material-module.ts","ng://servicelib/lib/Component/addedit-service/addedit-service.component.ts","ng://servicelib/lib/servicelib.module.ts"],"names":["ServicelibService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","ServicelibComponent","Object","defineProperty","receivedData","console","log","view","serviceListConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","service title","service desc","priority","status","bulletarr","admintablenameTableName","statusarr","val","name","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","search_settings","textsearch","label","field","loader","ngOnInit","Component","selector","template","Input","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddeditServiceComponent","generateForm","configData","action","addBulletList","buttonText","successMessage","setDefaultValue","defaultData","flag","getConfig","serviceForm","formBuilder","group","service_title","Validators","required","service_desc","array","userId","defaultValue","_this","forEach","element","bullet_title","bullet_desc","patchValue","a","b","controls","push","deleteBulletList","removeAt","trackByFn","index","onSubmit","markAsTouched","invalid","value","parseInt","postData","source","data","assign","condition","servicehttp","subscribe","response","openDialog","setTimeout","dialogRef","close","router","navigate","callBack","alert","error","x","dialog","open","Modal","width","msg","afterClosed","result","resetserviceForm","reset","inputBlur","markAsUntouched","FormBuilder","Router","MatDialog","Editor","ClassicEditor","editorConfig","placeholder","model","editorData","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","ServicelibModule","declarations","imports","HttpClientModule","RouterModule","CKEditorModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserModule","ListingModule","entryComponents"],"mappings":"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","sourcesContent":["\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicelibService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-servicelib',\n  templateUrl: './servicelib.component.html',\n  styleUrls: ['./servicelib.component.css']\n})\nexport class ServicelibComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public serviceListConfig: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n    console.log(\"+++\",receivedData.view);\n    this.serviceListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: \"datalist\",\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\"],\n      listArray_modify_header: { \"service title\": \"Service title\", \"service desc\": \"Service Description\",  \"priority\": \"Priority\", \"status\": \"Status\",\"bulletarr\":\"Number of bullets\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings: {\n        textsearch: [{ label: \"title...\", field: 'service_title' }, { label: \"status...\", field: 'status' }],\n      }\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { ServicelibService } from '../../servicelib.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-addedit-service',\n  templateUrl: './addedit-service.component.html',\n  styleUrls: ['./addedit-service.component.css']\n})\nexport class AddeditServiceComponent implements OnInit {\n\n\n\n\n\n  /**ckeditor start here*/\n  public Editor = ClassicEditor;  //for ckeditor\n  editorConfig = {\n    placeholder: 'Write description...',\n  };\n  public model = {\n    editorData: ''\n  };\n  /**ckeditor end here*/\n\n\n\n  // ===========================================declaration section================================\n  serviceForm: FormGroup;\n  loader: boolean = false;\n  configData: any;\n  buttonText = \"SUBMIT\";\n  successMessage: string = \"Submitted Successfully\";\n  dialogRef: any;\n  flag: boolean = false;\n  // ==============================================================================================\n\n\n\n  constructor(private formBuilder: FormBuilder, private servicehttp: ServicelibService,\n    private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loader = false;\n    this.generateForm();\n\n    if (this.configData.action != 'edit')\n      this.addBulletList('', '');\n\n\n    // ============================================SWITCH CASES==========================================\n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.flag = true;\n        break;\n    }\n    // ===============================================================================================\n\n  }\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n\n\n  // =============================================form generation====================================\n  generateForm() {\n    this.serviceForm = this.formBuilder.group({\n      service_title: ['', [Validators.required]],\n      service_desc: ['', [Validators.required]],\n      priority: ['', [Validators.required]],\n      status: [true,],\n      bulletarr: this.formBuilder.array([]),\n      userId: ['',]\n    });\n  }\n  // =================================================================================================\n\n\n\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n\n    defaultValue.bulletarr.forEach(element => {\n      this.addBulletList(element.bullet_title, element.bullet_desc);\n    });\n\n    this.serviceForm.patchValue({\n      service_title: defaultValue.service_title,\n      service_desc: defaultValue.service_desc,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      // bulletarr: '',\n      userId: null\n    });\n  }\n  // ==================================================================================================\n\n\n\n\n\n\n\n\n\n  // ==========================================FORM ARRAY FUNCTIONS===================================\n  addBulletList(a: any, b: any) {\n    const bl = this.serviceForm.controls.bulletarr as FormArray;\n    bl.push(this.formBuilder.group({\n      bullet_title: [a],\n      bullet_desc: [b],\n    }));\n  }\n\n  deleteBulletList() {\n    const bl = this.serviceForm.controls.bulletarr as FormArray;\n    bl.removeAt(1);\n  }\n\n\n  trackByFn(index) {\n    return index;\n  }\n  // ==================================================================================================\n\n\n  // ================================================SUBMIT============================================\n  onSubmit() {\n    this.loader = true;\n    this.serviceForm.controls['service_desc'].markAsTouched();\n    if (this.serviceForm.invalid) {\n      return;\n    } else {\n      if (this.serviceForm.value.status) {\n        this.serviceForm.value.status = parseInt(\"1\");\n      } else {\n        this.serviceForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.serviceForm.value, this.configData.condition)\n      };\n      this.servicehttp.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n\n  }\n  // ================================================================================================== \n\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =================================================================================================\n\n\n\n  resetserviceForm(){\n      this.serviceForm.reset();\n  }\n\n  inputBlur(val: any) {\n    console.log('Blur');\n    this.serviceForm.controls[val].markAsUntouched();\n  }\n}\n\n\n\n\n\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { NgModule } from '@angular/core';\nimport { ServicelibComponent } from './servicelib.component';\nimport { DemoMaterialModule } from './modules/material-module';\nimport { AddeditServiceComponent ,Modal} from './Component/addedit-service/addedit-service.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { ReactiveFormsModule , FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ListingModule } from 'lib-listing';\n@NgModule({\n  declarations: [ServicelibComponent,AddeditServiceComponent,Modal],\n  imports: [\n    DemoMaterialModule,\n    HttpClientModule,\n    RouterModule,\n    CKEditorModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserModule,\n    ListingModule\n  ],\n  exports: [ServicelibComponent,AddeditServiceComponent,Modal],\n  entryComponents:[Modal]\n})\nexport class ServicelibModule { }\n"]}